name: Check for vehicle updates

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '24 1,3,5,7,9,11,13,15,17,19,21,23 * * *'
  workflow_dispatch:

jobs:
  check-vehicles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Clone nudl tool
        run: |
          git clone https://github.com/chenxiaolong/nudl

      - name: Build nudl tool
        run: |
          cd nudl
          cargo build --release

      - name: Run nudl for all known brands and regions
        run: |
          mkdir -p updates
          rm -v -f updates/*/*/*/updates.json
          nudl=nudl/target/release/nudl
          declare -a brands=("hyundai" "kia" "genesis")
          declare -a regions=("br" "ca" "eu" "eur" "id" "in" "jp" "kr" "me" "nz" "ru" "sg" "tr" "us")
          for brand in "${brands[@]}"; do
            brandfolder="updates/${brand}"
            mkdir -p "$brandfolder"
            for region in "${regions[@]}"; do
              regionfolder="${brandfolder}/${region}"
              mkdir -p "$regionfolder"
              echo "Checking for ${brand} ${region} updates..."
              updates=$("$nudl" list --brand "$brand" --region "$region" --output json-raw)
              echo "$updates" | jq -c -r --sort-keys '.cars[ ]' | while read update; do
                model=$(echo "$update" | jq -r ".dvcName")
                # Replace slashes with dash
                model=$(echo "$model" | sed 's#/#-#g')
                # Remove invalid characters (example: Windows-specific)
                model=$(echo "$model" | sed 's/[<>:"|?*]/_/g')
                # Remove leading/trailing whitespace
                model=$(echo "$model" | sed 's/^[ \t]*//;s/[ \t]*$//')
                modelfolder="${regionfolder}/${model}"
                modelfile="${modelfolder}/updates.json"
                mkdir -p "$modelfolder"
                update=$(echo "$update" | jq -r --sort-keys .)
                echo " writing $model..."
                echo -e "$update" | tee "$modelfile"
              done
            done
          done

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add updates/*
          git diff --quiet && git diff --staged --quiet || git commit -am 'update changes [ci skip]'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} 
